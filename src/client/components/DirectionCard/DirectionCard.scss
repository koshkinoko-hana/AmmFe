@use 'sass:math';
@import '@common/styles/index';

.direction_card_container {
  width: $card-base-width;
  height: $card-base-width;
  cursor: pointer;
  .direction__card{
    width: $card-base-width;
    height: $card-base-width;
    position: relative;
    border-radius: 25px;
    overflow: hidden;
    transition: all 0.5s linear;
    &__pic {
      position: absolute;
      bottom: 0;
      left: 0;
      width: 100%;
      opacity: 1;
      transition: all 0.5s linear;
    }
    &__text {
      margin: 0;
      display: flex;
      flex-direction: row;
      align-items: flex-start;
      padding: 25px 30px;
      font-style: normal;
      font-weight: 500;
      font-size: 28px;
      line-height: 125%;
    }
    h5 {
      font-weight: 500;
      margin-top: 20px;
      margin-bottom: 0;
    }
  }
  &--active {
    width: 100%;
    height: auto;
    .direction__card {
      box-shadow: 0px 0px 10px 1px rgba(34, 60, 80, 0.22);
      padding: 20px;
      width: 100%;
      height: auto;
      background-color: #fff !important;
      &__text {
        padding: 0;
        font-size: 40px;

      }
    }
    .direction__card__pic {
      opacity: 0;
      display: none;
    }
    .direction__card__list {
      padding-left: 20px;
      li {
        padding-left: 18px;
        position: relative;
        &::before {
          content: "";
          background-color: $color-blue80;
          position: absolute;
          left: -10px;
          top: 45%;
          width: 5px;
          height: 5px;
          border-radius: 50%;
        }
      }
    }
  }
}

@mixin respond($breakpoint) {
  @media (max-width: map-get($breakpoints, $breakpoint)) {
    .direction__card {
       $cardWidth: map-get($cardWidths, $breakpoint) - (2 * $grid-base);
       $picDimension:   if( $cardWidth <  480px, 0.98 * $cardWidth, 450px);
       $fontSize:   if( $cardWidth <  480px, 20px, 28px);
       width: $picDimension;  
       height: $picDimension;
       &__pic {
          width: $picDimension;
        }
        &__text{
            font-size: $fontSize;
        }
    }
  }
}
@each $breakpoint, $width in $breakpoints {
  @include respond($breakpoint);
}
    
  